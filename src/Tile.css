@import "./vars.css";

.root {
  display: inline-flex;
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
}
.tile {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 80%;
  margin: 5px;
  white-space: nowrap;
  text-overflow: ellipsis;
  text-shadow: 2px 2px 0 rgba(255, 255, 255, 0.5);
  cursor: pointer;
  border-radius: 3px;
  background-image: url("./imgs/blank.png"), url("./imgs/card.png");
  background-position: center;
  background-size: contain, 100% 100%;
  background-repeat: no-repeat, no-repeat;
  text-transform: uppercase;

  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
}
.color {
  composes: tile;
  color: white;
  text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.7);
  animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
  transition: background 1s 0.82s, color 1s 0.82s;
}
.colorKeyed {
  composes: tile;
}
.colorRed {
  composes: color;
  background-image: url("./imgs/red-char.png"), url("./imgs/card-red.png");
}
.colorRedKeyed {
  composes: colorKeyed;
  background-image: url("./imgs/blank.png"), url("./imgs/card-red.png");
}
.colorBlue {
  composes: color;
  background-image: url("./imgs/blue-char.png"), url("./imgs/card-blue.png");
}
.colorBlueKeyed {
  composes: colorKeyed;
  background-image: url("./imgs/blank.png"), url("./imgs/card-blue.png");
}
.colorNeutral {
  composes: color;
  color: white;
  background-image: url("./imgs/neutral-char.png"), url("./imgs/card-neutral.png");
}
.colorNeutralKeyed {
  composes: colorKeyed;
  background-image: url("./imgs/blank.png"), url("./imgs/card-neutral.png");
}
.colorAssassin {
  composes: color;
  background-image: url("./imgs/assassin-char.png"), url("./imgs/card-assassin.png");
}
.colorAssassinKeyed {
  composes: colorKeyed;
  color: white;
  background-image: url("./imgs/blank.png"), url("./imgs/card-assassin.png");
}
.img {
  max-width: 80%;
  max-height: 80%;
}

@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }
  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }
  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }
  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}
